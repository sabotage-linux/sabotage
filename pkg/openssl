[deps]
zlib
perl
patch

[mirrors]
http://www.openssl.org/source/openssl-1.0.1e.tar.gz
[main]
filesize=4459777
sha512=c76857e439431b2ef6f2aa123997e53f82b9c3c964d4d765d7cc6c0c20b37a21adf578f9b759b2b65ae3925454c432a01b7de0cd320ece7181dc292e00d3244e

[build]
# https://github.com/entoo/portage/tree/gentoo.org/dev-libs/openssl

# if prefix is empty, openssl will install stuff into $destdir/etc ...
[ -z "$butch_prefix" ] && butch_prefix=/

# stolen from gentoo
epatch() {
	echo applying patch "$1"
	patch -p1 < "$1" || exit 1
}
epatch0() {
	echo applying patch "$1"
	patch -p0 < "$1" || exit 1
}
die() {
	[ -z "$1" ] || printf "%s\n" "$*"
	exit 1
}
FILESDIR="$K"
PN=openssl
epatch "${FILESDIR}"/${PN}-1.0.0a-ldflags.patch #327421
epatch "${FILESDIR}"/${PN}-1.0.0d-windres.patch #373743
epatch "${FILESDIR}"/${PN}-1.0.0h-pkg-config.patch
epatch "${FILESDIR}"/${PN}-1.0.1-parallel-build.patch
epatch "${FILESDIR}"/${PN}-1.0.1-x32.patch
epatch0 "${FILESDIR}"/${PN}-1.0.1e-ipv6.patch

# disable fips in the build
# make sure the man pages are suffixed #302165
# don't bother building man pages if they're disabled
sed -i \
	-e '/DIRS/s: fips : :g' \
	-e '/^MANSUFFIX/s:=.*:=ssl:' \
	-e '/^MAKEDEPPROG/s:=.*:=$(CC):' \
	-e $(has noman FEATURES \
		&& echo '/^install:/s:install_docs::' \
		|| echo '/^MANDIR=/s:=.*:=/usr/share/man:') \
	Makefile.org \
	|| die
# show the actual commands in the log
sed -i '/^SET_X/s:=.*:=set -x:' Makefile.shared

sed -i '1s,^:$,#!/usr/bin/perl,' Configure #141906
#./config --test-sanity || die "I AM NOT SANE"

sed -i 's/-DTERMIO/-DTERMIOS/g' Configure
sed -i 's/defined(linux)/0/' crypto/ui/ui_openssl.c

# this is asm generated by perl (asm/cast-586.pl) which will cause textrel's that
# will require musl's dynlinker to mprotect(PROT_EXEC), which is not allowed by grsec.
sed -i 's@cast-586.o:@c_enc.o:@' Configure

export CFLAGS="-fPIC -Wa,--noexecstack -fno-strict-aliasing -D_GNU_SOURCE -Wl,-Bsymbolic \
$optcflags"
export LDFLAGS="$optldflags"

disable_asm=
#disable_asm=no-asm

./config --prefix="$butch_prefix" --openssldir="$butch_prefix"/etc/ssl \
  --libdir="$butch_prefix"/lib no-dso $disable_asm zlib enable-md2 $CFLAGS

	# Clean out hardcoded flags that openssl uses
	local CFLAG=$(grep ^CFLAG= Makefile | LC_ALL=C sed \
		-e 's:^CFLAG=::' \
		-e 's:-fomit-frame-pointer ::g' \
		-e 's:-O[0-9] ::g' \
		-e 's:-march=[-a-z0-9]* ::g' \
		-e 's:-mcpu=[-a-z0-9]* ::g' \
		-e 's:-m[a-z0-9]* ::g' \
	)
	for mak in Makefile ; do
#	for mak in Makefile crypto/cast/Makefile ; do
	sed -i \
		-e "/^CFLAG/s|=.*|=${CFLAG} ${CFLAGS} ${INCLUDES}|" \
		-e "/^SHARED_LDFLAGS=/s|$| ${LDFLAGS}|" \
		"$mak" || die
	done
	# second part of our cast-586 fix: CFLAGS need to be picked up by the makefile.
	sed -i 's@CFLAG=-g@CFLAG=${CFLAG} ${CFLAGS}@' crypto/cast/Makefile

#sed -i 's@#include "e_os.h"@#define CAST_LONG unsigned@' crypto/cast/cast_lcl.h

make -j$MAKE_THREADS depend || exit 1
make -j$MAKE_THREADS build_libs || exit 1
make -j$MAKE_THREADS build-shared build_apps openssl.pc libssl.pc libcrypto.pc || exit 1
echo XXX make install
make -j$MAKE_THREADS INSTALL_PREFIX="$butch_install_dir" MANDIR="${butch_prefix}/share/man" install || exit 1

# for some reason, the *.so* are not installed
dest="${butch_install_dir}${butch_prefix}"
mkdir -p "$dest"/lib || exit 1
cp -a ./libcrypto.so.1.0.0 ./libcrypto.so ./libssl.so ./libssl.so.1.0.0 "$dest"/lib || exit 1

# ssl manpages look pretty useless and they use a custom suffix
# like ciphers.1ssl. rather than fixing them up, we just remove them
# and free 4 MB in turn.
rm -rf "$dest"/share/man

