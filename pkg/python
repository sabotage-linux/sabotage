[mirrors]
https://www.python.org/ftp/python/2.7.15/Python-2.7.15.tar.xz
http://sources.buildroot.net/Python-2.7.15.tar.xz

[vars]
filesize=12642436
sha512=27ea43eb45fc68f3d2469d5f07636e10801dee11635a430ec8ec922ed790bb426b072da94df885e4dfa1ea8b7a24f2f56dd92f9b0f51e162330f161216bd6de6
pkgver=8
desc='interpreter for the python 2.x scripting language'

[deps]
musl
curses
libressl
bzip2
expat
libffi
libedit
sqlite

[build]
# work around buggy installer which puts stuff into prefix directly (omitting destdir) when
# the prefix equals "/"
[ "$butch_prefix" = "/" ] && butch_prefix=

# python can't deal with prefix= or prefix=/ correctly.
# it will emit empty PREFIX and EXEC_PREFIX macros into pyconfig.h
# additionally it searches for stuff only relative to its own binary.
# this doesn't work well with our symlink relocation strategy.
patch -p1 < "$K"/python273-pathsearch.patch
patch -p1 < "$K"/python-xcompile.patch
patch -p1 < "$K"/python-includedirs.patch
patch -p1 < "$K"/python-UTF-8.patch
patch -p1 < "$K"/python-sysconfig-prefix.patch
# if PYTHON_SMALL_AND_SLOW is set, we disable automatic creation of .pyc and
# .pyo bytecode files. the result is small delay on startup (up to 2.5x slower)
# but substantial savings in disk space (31 vs 22 MB on x86_64)).
if test "$PYTHON_SMALL_AND_SLOW" = 1 ; then
  patch -p1 < "$K"/python2715-dont_write_bytecode.patch
else
  # we benchmarked python .pyo optimization and it is completely useless, but
  # causes additionaly cluttering with .pyo files, so disable it.
  patch -p1 < "$K"/python2715-disable_pyo_optimization.patch
fi
# below lines are commented out, because even though they should improve libedit support,
# the resulting readline module doesn't deal correctly with tab completion.
# for example "completing text" code from https://pymotw.com/2/readline/
# in order to use it, one has to uncomment and add -DLIBEDIT_SUPPORT to EXTRA_CFLAGS

# official libedit support is mistakenly only added for __APPLE__
#sed -i 's/__APPLE__/LIBEDIT_SUPPORT/g' Modules/readline.c
# patch out unnecessary strdup/setlocale calls, which workaround a GNU readline bug
#sed -i 's/HAVE_SETLOCALE/HAVE_SETLOCALE) \&\& !defined(LIBEDIT_SUPPORT/g' Modules/readline.c

sed -i 's@return readline@return feedline@' configure

[ -n "$CROSS_COMPILE" ] && \
  xconfflags="--host=$($CC -dumpmachine) --build=$($HOSTCC -dumpmachine)"

CFLAGS="-D_GNU_SOURCE -D_BSD_SOURCE -fPIC" \
OPT="$optcflags" \
LDFLAGS="$optldflags -lncursesw -lterminfo" \
./configure -C --prefix="$butch_prefix" \
  --with-system-expat --with-system-ffi $xconfflags \
  --with-threads \
  --disable-toolbox-glue \
  --without-cxx-main \
  ac_cv_lib_readline_rl_callback_handler_install=no \
  ac_cv_lib_readline_rl_pre_input_hook=no \
  ac_cv_lib_readline_rl_completion_display_matches_hook=no \
  ac_cv_lib_readline_rl_completion_matches=yes \
  ac_cv_have_long_long_format=yes \
  ac_cv_file__dev_ptc=no \
  ac_cv_file__dev_ptmx=yes

if [ -n "$CROSS_COMPILE" ] ; then
	cp pyconfig.h pyconfig.h.target
	for i in SIZEOF_LONG SIZEOF_PTHREAD_T SIZEOF_SIZE_T SIZEOF_TIME_T SIZEOF_VOID_P SIZEOF_UINTPTR_T ; do
		sed -i 's,#define '$i',//,' pyconfig.h
	done
	printf "%s\n" 'int main() { printf("%zu\n", sizeof(time_t)); return 0;}' > foo.c
	$HOSTCC -include time.h -include stdio.h foo.c
	l=$(./a.out)
cat << EOF >> pyconfig.h
#define SIZEOF_LONG __SIZEOF_LONG__
#define SIZEOF_PTHREAD_T SIZEOF_LONG
#define SIZEOF_SIZE_T SIZEOF_LONG
#define SIZEOF_VOID_P SIZEOF_LONG
#define SIZEOF_UINTPTR_T SIZEOF_LONG
#define SIZEOF_TIME_T $l
EOF
	make Parser/pgen CC="$HOSTCC" -j$MAKE_THREADS
	cp pyconfig.h.target pyconfig.h
else
	make Parser/pgen -j$MAKE_THREADS
fi

make -j$MAKE_THREADS

make DESTDIR="$butch_install_dir" install

# shrinking python's install size from 90+ MB to 40+...
dest="$butch_install_dir""$butch_prefix"
# removing duplicate libpython2.7.a which takes 10-17MB depending on CFLAGS
ln -sf ../../libpython2.7.a "$dest"/lib/python2.7/config/libpython2.7.a
# removing tests
for test in sqlite3/test email/test ctypes/test test unittest/test lib-tk/test \
            bsddb/test json/tests lib2to3/tests distutils/tests tests ; do
	rm -rf "$dest"/lib/python2.7/"$test"
done

# remove hardcoded CFLAGS interfering with cross builds
# note: OPT is only used if CFLAGS are exported in environment.
sed -i "s,'OPT': '.*','OPT': ''," "$dest"/lib/python2.7/_sysconfigdata.py

if test "$PYTHON_SMALL_AND_SLOW" = 1 ; then
 # removing precompiled python code, if any
 find "$dest"/lib/python2.7/ -name '*.pyo' -or -name '*.pyc' -delete
else
 # precompile all .pyc files now rather than on first use, so they're part of
 # the package directory
 test -n "$CROSS_COMPILE" || ./python -E Lib/compileall.py "$dest"/lib/python2.7
fi
