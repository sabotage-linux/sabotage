--- v4l-utils-1.6.3.org/lib/libv4l2/v4l2convert.c
+++ v4l-utils-1.6.3/lib/libv4l2/v4l2convert.c
@@ -86,7 +86,7 @@
 	return fd;
 }
 
-#ifdef linux
+#ifdef __GLIBC__
 LIBV4L_PUBLIC int open64(const char *file, int oflag, ...)
 {
 	int fd;
@@ -121,7 +121,7 @@
 	return v4l2_dup(fd);
 }
 
-LIBV4L_PUBLIC int ioctl(int fd, unsigned long int request, ...)
+LIBV4L_PUBLIC int ioctl(int fd, int request, ...)
 {
 	void *arg;
 	va_list ap;
@@ -144,7 +144,7 @@
 	return v4l2_mmap(start, length, prot, flags, fd, offset);
 }
 
-#ifdef linux
+#ifdef __GLIBC__
 LIBV4L_PUBLIC void *mmap64(void *start, size_t length, int prot, int flags, int fd,
 		__off64_t offset)
 {
--- v4l-utils-1.6.3.org/lib/libv4l1/v4l1compat.c
+++ v4l-utils-1.6.3/lib/libv4l1/v4l1compat.c
@@ -62,7 +62,7 @@
 	return fd;
 }
 
-#ifdef linux
+#ifdef __GLIBC__
 LIBV4L_PUBLIC int open64(const char *file, int oflag, ...)
 {
 	int fd;
@@ -94,7 +94,7 @@
 	return v4l1_dup(fd);
 }
 
-LIBV4L_PUBLIC int ioctl(int fd, unsigned long int request, ...)
+LIBV4L_PUBLIC int ioctl(int fd, int request, ...)
 {
 	void *arg;
 	va_list ap;
@@ -117,7 +117,7 @@
 	return v4l1_mmap(start, length, prot, flags, fd, offset);
 }
 
-#ifdef linux
+#ifdef __GLIBC__
 LIBV4L_PUBLIC void *mmap64(void *start, size_t length, int prot, int flags, int fd,
 		__off64_t offset)
 {
