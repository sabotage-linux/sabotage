[mirrors]
https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tar.xz
http://sources.buildroot.net/python3/Python-3.7.3.tar.xz

[vars]
filesize=17108364
sha512=6d9b7c0f1764e0f655a39430a3af6f7b5e3c9b7166c042e780677a54b17ad4ca6d0d9cba262c82b1b70bba8f7c28883dad4cc0d7cc194fc7d2c1b5f4f08a763a
pkgver=1
desc='interpreter for the python 3.x scripting language'

[deps]
musl
curses
libressl
bzip2
expat
libffi
libedit

[build]
# work around buggy installer which puts stuff into prefix directly
# (omitting destdir) when the prefix equals "/"
[ "$butch_prefix" = "/" ] && butch_prefix=

# python can't deal with prefix= or prefix=/ correctly.
# it will emit empty PREFIX and EXEC_PREFIX macros into pyconfig.h
# additionally it searches for stuff only relative to its own binary.
# this doesn't work well with our symlink relocation strategy.
patch -p1 < "$K"/python3-pathsearch.patch
patch -p1 < "$K"/python3-xcompile.patch
#patch -p1 < "$K"/python3-includedirs.patch # TODO
#patch -p1 < "$K"/python3-UTF-8.patch # TODO
patch -p1 < "$K"/python3-sysconfig-prefix.patch # TODO: incomplete
# if PYTHON_SMALL_AND_SLOW is set, we disable automatic creation of .pyc and
# .pyo bytecode files. the result is small delay on startup (up to 2.5x slower)
# but substantial savings in disk space (31 vs 22 MB on x86_64)).
if test "$PYTHON_SMALL_AND_SLOW" = 1 ; then
  patch -p1 < "$K"/python3-dont_write_bytecode.patch
else
  # the patch to disable python .pyo optimization would go here,
  # but it isn't necessary for now.
  :
fi

# TODO:
# below lines are commented out, because even though they should improve libedit support,
# the resulting readline module doesn't deal correctly with tab completion.
# for example "completing text" code from https://pymotw.com/2/readline/
# in order to use it, one has to uncomment and add -DLIBEDIT_SUPPORT to EXTRA_CFLAGS
#
# official libedit support is mistakenly only added for __APPLE__
#sed -i 's/__APPLE__/LIBEDIT_SUPPORT/g' Modules/readline.c
# patch out unnecessary strdup/setlocale calls, which workaround a GNU readline bug
#sed -i 's/HAVE_SETLOCALE/HAVE_SETLOCALE) \&\& !defined(LIBEDIT_SUPPORT/g' Modules/readline.c

sed -i 's@return readline@return feedline@' configure

[ -n "$CROSS_COMPILE" ] && \
  xconfflags="--host=$($CC -dumpmachine) --build=$($HOSTCC -dumpmachine)"

# borrowed from archlinux:
sed -i -e "s|^#.* /usr/local/bin/python|#!/bin/python3|" Lib/cgi.py
find . -name '*.py' -exec \
  sed -i "s|#[ ]*![ ]*/usr/bin/env python$|#!/usr/bin/env python3|" {} +

CFLAGS="-D_GNU_SOURCE -D_BSD_SOURCE -fPIC" \
OPT="$optcflags" \
LDFLAGS="$optldflags -lncursesw -lterminfo" \
./configure -C --prefix="$butch_prefix" \
  --with-system-expat --with-system-ffi $xconfflags \
  --without-cxx-main \
  ac_cv_lib_readline_rl_callback_handler_install=no \
  ac_cv_lib_readline_rl_pre_input_hook=no \
  ac_cv_lib_readline_rl_completion_display_matches_hook=no \
  ac_cv_lib_readline_rl_completion_matches=yes \
  ac_cv_have_long_long_format=yes \
  ac_cv_file__dev_ptc=no \
  ac_cv_file__dev_ptmx=yes

if [ -n "$CROSS_COMPILE" ] ; then
  cp pyconfig.h pyconfig.h.target
  for i in SIZEOF_LONG SIZEOF_PTHREAD_T SIZEOF_SIZE_T SIZEOF_TIME_T SIZEOF_VOID_P SIZEOF_UINTPTR_T ; do
    sed -i 's,#define '$i',//,' pyconfig.h
  done
  printf "%s\n" 'int main() { printf("%zu\n", sizeof(time_t)); return 0;}' > foo.c
  $HOSTCC -include time.h -include stdio.h foo.c
  l=$(./a.out)
cat << EOF >> pyconfig.h
#define SIZEOF_LONG __SIZEOF_LONG__
#define SIZEOF_PTHREAD_T SIZEOF_LONG
#define SIZEOF_SIZE_T SIZEOF_LONG
#define SIZEOF_VOID_P SIZEOF_LONG
#define SIZEOF_UINTPTR_T SIZEOF_LONG
#define SIZEOF_TIME_T $l
EOF
  make Parser/pgen CC="$HOSTCC" -j$MAKE_THREADS
  cp pyconfig.h.target pyconfig.h
else
  make Parser/pgen -j$MAKE_THREADS
fi

make -j$MAKE_THREADS

make DESTDIR="$butch_install_dir" altinstall

dest="$butch_install_dir""$butch_prefix"
# removing tests
for test in sqlite3/test email/test ctypes/test test unittest/test tkinter/test \
            bsddb/test json/tests lib2to3/tests distutils/tests tests ; do
  rm -rf "$dest"/lib/python3.7/"$test"
done

# remove hardcoded CFLAGS interfering with cross builds
# note: OPT is only used if CFLAGS are exported in environment.
sed -i "s,'OPT': '.*','OPT': ''," "$dest"/lib/python3.7/_sysconfigdata_*.py

if test "$PYTHON_SMALL_AND_SLOW" = 1 ; then
  # removing precompiled python code, if any
  find "$dest"/lib/python3.7/ -name '*.pyo' -or -name '*.pyc' -delete
else
  # precompile all .pyc files now rather than on first use, so they're part of
  # the package directory
  test -n "$CROSS_COMPILE" || ./python -E Lib/compileall.py "$dest"/lib/python3.7
fi

# create symlinks without the major version number in them
for bin in idle3.7 2to3-3.7 pip3.7 easy_install-3.7 \
           python3.7 pyvenv-3.7 python3.7m pydoc3.7 python3.7m-config ; do
  ln -sf "$dest/bin/$bin" "$dest/bin/${bin/3.7/3}"
done
