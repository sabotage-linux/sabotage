[vars]
filesize=13366790
sha512=06645865a851bfdeca399ed1266f99e072a9bb1d8c6f0d3d6d0f809080ce1e60f45d9e4b52c93cf89f2062a4db0a69f519f23ac5de918bc89bdd794ebd2b96b4
tardir=gcc-3.4.6

[deps]

[mirrors]
http://ftp.gnu.org/gnu/gcc/gcc-3.4.6/gcc-core-3.4.6.tar.bz2

[build]
# do not rebuild stage0 packages once we're past that stage
test "$STAGE" = "0" || exit 0
VERSION=3.4.6
patch -p1 < "$K"/gcc-346-unwind2.patch
patch -p1 < "$K"/gcc-346-unlink.patch
patch -p1 < "$K"/gcc-346-libgcc-visibility.patch

find gcc/config -name linux.h -exec sed -i 's@struct siginfo@siginfo_t@g' "{}" \;

intel32=false
case "$A" in i[3-6]86) intel32=true ;; esac
if $intel32 && [ "$(./config.guess)" = "i686-pc-linux-gnulibc1" ] ; then
	printf '#!/bin/sh\necho i386-unknown-linux-gnu\n' > config.guess
fi


# remove fix-includes
sed -i 's@\./fixinc\.sh@-c true@' gcc/Makefile.in

#apparently some control freak gcc used by ubuntu enforces that the mode arg is set in open calls
sed -i 's@O_CREAT@O_CREAT, 0770@' gcc/collect2.c

sed -i 's@/lib/ld-linux.so.[12]@/lib/ld-musl-i386.so.1@' gcc/config/i386/linux.h
sed -i 's@/lib/ld-linux.so.[12]@/lib/ld-musl-i386.so.1@' gcc/config/i386/linux64.h
sed -i 's@/lib64/ld-linux-x86-64.so.2@/lib/ld-musl-x86_64.so.1@' gcc/config/i386/linux64.h
sed -i 's@/lib/ld.so.1@/lib/ld-musl-mips.so.1@' gcc/config/mips/linux.h
sed -i 's@/lib/ld.so.1@/lib/ld-musl-mips.so.1@' gcc/config/mips/linux64.h
sed -i 's@/lib64/ld.so.1@/lib/ld-musl-mips.so.1@' gcc/config/mips/linux64.h
sed -i 's@/lib32/ld.so.1@/lib/ld-musl-mips.so.1@' gcc/config/mips/linux64.h
sed -i 's@/lib/ld.so.1@/lib/ld-musl-powerpc.so.1@g' gcc/config/rs6000/sysv4.h
sed -i 's@/lib/ld.so.1@/lib/ld-musl-powerpc.so.1@g' gcc/config/rs6000/linux64.h
sed -i 's@/lib64/ld64.so.1@/lib/ld-musl-powerpc64.so.1@g' gcc/config/rs6000/linux64.h


"$K"/libibertyfix libiberty

case "$A" in
  arm) echo "error: gcc 3.4.6 does not support EABI!" ; exit 1 ;;
  x86_64) archflags=--disable-multilib ;;
  i[3-6]86) archflags=--disable-multilib ;;
  *) archflags= ;;
esac
[ -n "$GCC_ARCH_CONFIG_FLAGS" ] && archflags="$archflags $GCC_ARCH_CONFIG_FLAGS"

# workaround for debian idiocy: they put bits/ into an arch-specific
# sysdir in /usr/include, so the bootstrap compiler (xgcc), which
# uses the host headers, will use a broken set of headers.
is_ubuntu_or_debian() {
	uname -v | grep Ubuntu >/dev/null 2>&1  || \
	uname -v | grep Debian >/dev/null 2>&1
}

if [ "$STAGE" = "0" ] && is_ubuntu_or_debian ; then
	echo debian/ubuntu detected!
	if [ -d /usr/include/"$A"-linux-gnu/bits ] ; then
		for i in sys bits asm gnu ; do
			ln -sf /usr/include/"$A"-linux-gnu/"$i" include/
		done
	fi
fi

./configure --prefix="$butch_prefix" \
  --mandir="$butch_prefix"/share/man \
  --infodir="$butch_prefix"/infoXXX \
  --disable-bootstrap --disable-shared --disable-nls $archflags
make \
  CFLAGS="-DSTDC_HEADERS -Werror-implicit-function-declaration" \
  LDFLAGS="-static" \
  -j$MAKE_THREADS
make DESTDIR="$butch_install_dir" install-gcc

dest="$butch_install_dir""$butch_prefix"

rm -rf "$dest"/infoXXX

# rename gcc to rawcc so musl-gcc can call the *right* gcc
mv "$dest"/bin/gcc "$dest"/bin/rawcc
ln -sf "rawcc" "$dest"/bin/gcc

ln -sf ar "$dest"/bin/gcc-ar
ln -sf ranlib "$dest"/bin/gcc-ranlib
ln -sf nm "$dest"/bin/gcc-nm

[ "$A" = "x86_64" ] && mv "$dest"/lib64/* "$dest"lib/ || true

ln -sf rawcc "$dest"/bin/gcc-$VERSION
