--- a/Makefile
+++ b/Makefile
@@ -23,7 +23,6 @@
 CFLAGS+=-Iinclude
 LIBS+=-lconfuse
 LIBS+=-lyajl
-LIBS+=-lpulse
 LIBS+=-lm
 LIBS+=-lpthread
 
@@ -79,10 +78,8 @@
 OBJS:=$(sort $(wildcard src/*.c *.c))
 OBJS:=$(OBJS:.c=.o)
 
-ifeq ($(OS),OpenBSD)
 OBJS:=$(filter-out src/pulse.o, $(OBJS))
 LIBS:=$(filter-out -lpulse, $(LIBS))
-endif
 
 src/%.o: src/%.c include/i3status.h
 	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ $<
Only in b: i3status
--- a/src/print_volume.c
+++ b/src/print_volume.c
@@ -61,53 +61,6 @@
         free(instance);
     }
 
-#ifndef __OpenBSD__
-    /* Try PulseAudio first */
-
-    /* If the device name has the format "pulse[:N]" where N is the
-     * index of the PulseAudio sink then force PulseAudio, optionally
-     * overriding the default sink */
-    if (!strncasecmp(device, "pulse", strlen("pulse"))) {
-        uint32_t sink_idx = device[strlen("pulse")] == ':' ? (uint32_t)atoi(device + strlen("pulse:")) : DEFAULT_SINK_INDEX;
-        const char *sink_name = device[strlen("pulse")] == ':' &&
-                                        !isdigit(device[strlen("pulse:")])
-                                    ? device + strlen("pulse:")
-                                    : NULL;
-        int cvolume = pulse_initialize() ? volume_pulseaudio(sink_idx, sink_name) : 0;
-        int ivolume = DECOMPOSE_VOLUME(cvolume);
-        bool muted = DECOMPOSE_MUTED(cvolume);
-        if (muted) {
-            START_COLOR("color_degraded");
-            pbval = 0;
-        }
-        /* negative result means error, stick to 0 */
-        if (ivolume < 0)
-            ivolume = 0;
-        outwalk = apply_volume_format(muted ? fmt_muted : fmt,
-                                      outwalk,
-                                      ivolume);
-        goto out;
-    } else if (!strcasecmp(device, "default") && pulse_initialize()) {
-        /* no device specified or "default" set */
-        int cvolume = volume_pulseaudio(DEFAULT_SINK_INDEX, NULL);
-        int ivolume = DECOMPOSE_VOLUME(cvolume);
-        bool muted = DECOMPOSE_MUTED(cvolume);
-        if (ivolume >= 0) {
-            if (muted) {
-                START_COLOR("color_degraded");
-                pbval = 0;
-            }
-            outwalk = apply_volume_format(muted ? fmt_muted : fmt,
-                                          outwalk,
-                                          ivolume);
-            goto out;
-        }
-        /* negative result means error, fail PulseAudio attempt */
-    }
-/* If some other device was specified or PulseAudio is not detected,
- * proceed to ALSA / OSS */
-#endif
-
 #ifdef LINUX
     int err;
     snd_mixer_t *m;
