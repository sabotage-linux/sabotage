#!/bin/sh
if [ -z "$S" ] ; then
	echo 'S not set, did you source config?'
	exit 1
fi

usage() {
	cat <<- EOF
	butch pack : creates distributable binary archives of installed pkgs into the
	current directory.
	may require root to catch all files.

	butch pack [compressor] pkgname...

	optional: compressor can be one of
	  --none: no compression. plain tar archive is created.
	  --gz:   gzip compression.
	  --xz:   fast xz compression.
	  --xze:  xz compression (extreme).
	EOF
	exit 1
}

get_pkgver() {
	ver=$($BINDIR/butch-printsec "$1" vars | grep '^pkgver=')
	if [ -n "$ver" ] ; then
		printf "%s\n" "$ver" | cut -b 8-
	else
		echo 1
	fi
}

pack(){
	pkg=$1

	fl=$S/pkg/$pkg
	if [ ! -e "$fl" ] ; then
		echo "package $fl does not exist!"
		return 1
	fi

	[ -z "$butch_staging_dir" ] && butch_staging_dir=/opt
	me="$PWD"

	tarflags=cf
	test $comp = gz && tarflags=czf
	test $comp = xz && tarflags=cJf
	[ "$R" = "/" ] && R=
	cd "$R"$butch_staging_dir
	[ -d "$pkg" ] || { echo "error: $PWD/$pkg not found" ; cd "$me" ; return 1 ; }
	ver=$(get_pkgver $pkg)
	out=$me/${pkg}_${A}_${ver}.$ext
	tar $tarflags "$out" "$pkg"
	[ -e "$out" ] || { cd "$me" ; return 1 ; }
	if test $comp = xze ; then
		tr=$me/${pkg}_$A.tar
		mv "$out" "$tr"
		xz -z -9 -e "$tr"
		[ -e "$out" ] || { cd "$me" ; return 1 ; }
	fi
	echo "$(basename $out) created."
	cd "$me"
}

[ -z "$1" ] && usage
BINDIR=$(dirname $(readlink -f "$0"))
comp=none
ext=tar
case $1 in
	--none) shift ;;
	--gz) comp=gz ; ext=tar.gz ; shift ;;
	--xz) comp=xz ; ext=tar.xz ; shift ;;
	--xze) comp=xze ; ext=tar.xz ; shift ;;
esac
ret=0
while test -n "$1" ; do
	pack "$1"
	test "$?" = 0 || ret=1
	shift
done
exit $ret
