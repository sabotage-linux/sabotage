## set the arch you're building for
#export A=i386
#export A=x86_64
#export A=x86_64-x32
#export A=mips
#export A=powerpc
#export A=microblaze
#export A=sh
#export A=arm

[ -z "$A" ] && { printf "ERROR: no arch set\n" ; exit 1 ; }

# arch specific flags to pass to the gcc build
# your crosscompiler should be configured equivalently
# if not provided, will be derived from the crosscompiler config
#export GCC_ARCH_CONFIG_FLAGS="--with-float=soft --with-fpu=vfp"

# set to basepath containing your musl-cross toolchains
# we assume there's a subdir equal to the triplet in there
crosstoolchain=$HOME/musl-cross-make-6.5.0

#set toolchain triplet
#triplet=x86_64-linux-muslx32
#triplet=arm-linux-musleabihf
triplet=$A-linux-musl

# point S to sabotage checkout or /src dir of an existing sabotage install
# path is used to lookup KEEP, pkg and tarballs dirs
#export S=/src
export S=XXXXX

# set R to the rootfs path (where stuff gets installed to)
export R=$HOME/x-prefix/$A

# set number of parallel make processes
export MAKE_THREADS=1

# set TESTBUILD to 1 to build everything without optimization/debug (much faster)
#export TESTBUILD=1

# typically, you shouldn't have to change any of the vars after this line

export K=$S/KEEP
# where stuff gets built
export B=$R/src/build
export C=$S/tarballs
export LOGPATH=$R/src/logs
export BUTCHDB=$R/var/lib/butch.db
export butch_filelists=$R/src/filelists
export butch_tarballs_used=$R/src/tarballs_used.txt
export BUTCH_BUILD_TEMPLATE=$K/butch_build_template.txt
export BUTCH_DOWNLOAD_TEMPLATE=$K/butch_download_template.txt

export PATH="$PATH":$crosstoolchain/$triplet/bin

export CC="$triplet-gcc -L$R/lib -isystem $R/include"
export CXX="$triplet-g++ -L$R/lib -isystem $R/include"
export CROSS_COMPILE=$triplet-
export HOSTCC=gcc
export HOSTCXX=g++

export STAGE=1
export PKG_CONFIG_SYSROOT_DIR=$R
export PKG_CONFIG_LIBDIR=$R/lib/pkgconfig
# do not build host/runtime deps
export DEPS=build

if ! test -d "$R" ; then
	echo "ERROR: R points to non-existing path $R">&2
	exit 1
fi
if ! $CC --version >/dev/null 2>&1 ; then
	echo "ERROR! toolchain $CC not found in PATH $PATH">&2
	exit 1
fi

