diff -Nur qtdeclarative/src/qml/jsruntime/qv4engine.cpp.orig qtdeclarative/src/qml/jsruntime/qv4engine.cpp
--- a/qtdeclarative/src/qml/jsruntime/qv4engine.cpp.orig	2015-06-29 20:12:38.000000000 +0000
+++ b/qtdeclarative/src/qml/jsruntime/qv4engine.cpp	2015-07-27 15:01:10.580702868 +0000
@@ -30,6 +30,7 @@
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
+
 #include <qv4engine_p.h>
 #include <qv4context_p.h>
 #include <qv4value_inl_p.h>
@@ -95,6 +96,10 @@
 #include <valgrind/memcheck.h>
 #endif
 
+#if defined (Q_OS_LINUX) and !defined (__GLIBC__)
+#include <sys/syscall.h>
+#endif
+
 QT_BEGIN_NAMESPACE
 
 using namespace QV4;
@@ -145,9 +150,13 @@
         pthread_attr_getstack(&attr, &stackBottom, &stackSize);
         pthread_attr_destroy(&attr);
 
-#        if defined(Q_OS_ANDROID)
+#        if defined(Q_OS_ANDROID) || !defined(__GLIBC__)
         // Bionic pretends that the main thread has a tiny stack; work around it
+#	if defined (Q_OS_ANDROID)
         if (gettid() == getpid()) {
+#	elif defined (Q_OS_LINUX)
+        if (syscall(SYS_gettid) == getpid()) {
+#endif
             rlimit limit;
             getrlimit(RLIMIT_STACK, &limit);
             stackBottom = reinterpret_cast<void*>(reinterpret_cast<quintptr>(stackBottom) + stackSize - limit.rlim_cur);
