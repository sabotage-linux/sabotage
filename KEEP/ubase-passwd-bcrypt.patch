diff -u -r ubase_before/config.def.h ubase/config.def.h
--- ubase_before/config.def.h	2016-04-25 15:33:45.172988937 +0000
+++ ubase/config.def.h	2016-04-27 19:24:17.313710492 +0000
@@ -2,7 +2,6 @@
 
 #define ENV_SUPATH	"/bin"
 #define ENV_PATH	"/bin"
-#define PW_CIPHER	"$6$"	/* SHA-512 */
 #undef UTMP_PATH
 #define UTMP_PATH	"/var/run/utmp"
 #undef BTMP_PATH
diff -u -r ubase_before/passwd.c ubase/passwd.c
--- ubase_before/passwd.c	2016-04-25 15:33:45.175988938 +0000
+++ ubase/passwd.c	2016-04-27 19:27:42.642721187 +0000
@@ -2,6 +2,7 @@
 #include <sys/ioctl.h>
 #include <sys/stat.h>
 #include <sys/types.h>
+#include <sys/syscall.h>
 
 #include <errno.h>
 #include <fcntl.h>
@@ -18,6 +19,16 @@
 #include "text.h"
 #include "util.h"
 
+static int getrandom(void *buf, size_t buflen, unsigned int flags) {
+	return syscall(SYS_getrandom, buf, buflen, flags);
+}
+static void bfsalt(unsigned char buf[22]) {
+	static const char dict[]="./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
+	getrandom(buf, 22, 0);
+	unsigned i;
+	for(i=0; i<22; i++) buf[i] = dict[buf[i] % (sizeof(dict)-1)];
+}
+
 static FILE *
 spw_get_file(const char *user)
 {
@@ -137,7 +148,10 @@
 main(int argc, char *argv[])
 {
 	char *cryptpass1 = NULL, *cryptpass2 = NULL, *cryptpass3 = NULL;
-	char *inpass, *p, *salt = PW_CIPHER, *prevhash = NULL;
+	char *inpass, *p, *prevsalt = NULL, *prevhash = NULL;
+	char salt[27] = "$2a$08$";
+	unsigned char buf[22] = {0};
+	unsigned i;
 	struct passwd *pw;
 	struct spwd *spw = NULL;
 	FILE *fp = NULL;
@@ -188,9 +202,9 @@
 			goto newpass;
 		}
 		if (pw->pw_passwd[0] == 'x')
-			prevhash = salt = spw->sp_pwdp;
+			prevhash = prevsalt = spw->sp_pwdp;
 		else
-			prevhash = salt = pw->pw_passwd;
+			prevhash = prevsalt = pw->pw_passwd;
 	}
 
 	printf("Changing password for %s\n", pw->pw_name);
@@ -199,7 +213,7 @@
 		eprintf("getpass:");
 	if (inpass[0] == '\0')
 		eprintf("no password supplied\n");
-	p = crypt(inpass, salt);
+	p = crypt(inpass, prevsalt);
 	if (!p)
 		eprintf("crypt:");
 	cryptpass1 = estrdup(p);
@@ -207,6 +221,9 @@
 		eprintf("incorrect password\n");
 
 newpass:
+	bfsalt(buf);
+	for(i=0; i<22; i++) salt[i+7] = buf[i];
+
 	inpass = getpass("Enter new password: ");
 	if (!inpass)
 		eprintf("getpass:");
